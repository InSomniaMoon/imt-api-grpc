# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import time_pb2 as time__pb2


class TimeServiceStub(object):
  """Missing associated documentation comment in .proto file."""
  def __init__(self, channel):
    """Constructor.

        Args:
            channel: A grpc.Channel.
        """
    self.GetAllShowTimes = channel.unary_stream(
        '/TimeService/GetAllShowTimes',
        request_serializer=time__pb2.Empty.SerializeToString,
        response_deserializer=time__pb2.ShowTime.FromString,
    )
    self.GetShowTimesByDate = channel.unary_unary(
        '/TimeService/GetShowTimesByDate',
        request_serializer=time__pb2.Date.SerializeToString,
        response_deserializer=time__pb2.ShowTime.FromString,
    )


class TimeServiceServicer(object):
  """Missing associated documentation comment in .proto file."""
  def GetAllShowTimes(self, request, context):
    """Missing associated documentation comment in .proto file."""
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetShowTimesByDate(self, request, context):
    """Missing associated documentation comment in .proto file."""
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TimeServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAllShowTimes':
      grpc.unary_stream_rpc_method_handler(
          servicer.GetAllShowTimes,
          request_deserializer=time__pb2.Empty.FromString,
          response_serializer=time__pb2.ShowTime.SerializeToString,
      ),
      'GetShowTimesByDate':
      grpc.unary_unary_rpc_method_handler(
          servicer.GetShowTimesByDate,
          request_deserializer=time__pb2.Date.FromString,
          response_serializer=time__pb2.ShowTime.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TimeService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class TimeService(object):
  """Missing associated documentation comment in .proto file."""
  @staticmethod
  def GetAllShowTimes(request,
                      target,
                      options=(),
                      channel_credentials=None,
                      call_credentials=None,
                      insecure=False,
                      compression=None,
                      wait_for_ready=None,
                      timeout=None,
                      metadata=None):
    return grpc.experimental.unary_stream(
        request, target, '/TimeService/GetAllShowTimes',
        time__pb2.Empty.SerializeToString, time__pb2.ShowTime.FromString,
        options, channel_credentials, insecure, call_credentials, compression,
        wait_for_ready, timeout, metadata)

  @staticmethod
  def GetShowTimesByDate(request,
                         target,
                         options=(),
                         channel_credentials=None,
                         call_credentials=None,
                         insecure=False,
                         compression=None,
                         wait_for_ready=None,
                         timeout=None,
                         metadata=None):
    return grpc.experimental.unary_unary(
        request, target, '/TimeService/GetShowTimesByDate',
        time__pb2.Date.SerializeToString, time__pb2.ShowTime.FromString,
        options, channel_credentials, insecure, call_credentials, compression,
        wait_for_ready, timeout, metadata)
